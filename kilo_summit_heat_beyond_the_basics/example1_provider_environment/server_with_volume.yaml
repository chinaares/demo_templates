heat_template_version: 2013-05-23

parameters:
  key_name:
    type: string
    description: keypair to enable SSH access to the instance.
    constraints:
      - custom_constraint: nova.keypair

  image_id:
    type: string
    description: ID of the image to use for the instance to be created.
    constraints:
      - custom_constraint: glance.image

  volume_size:
    type: number
    description: Size of volume to attach to instance
    default: 1
    constraints:
      - range: {min: 1, max: 10}

  instance_type:
    type: string
    description: Type of the instance to be created.
    default: m1.nano
    constraints:
      - custom_constraint: nova.flavor

resources:
  volume:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size }
      description: Volume for stack

  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: volume }
      instance_uuid: { get_resource: instance }

  instance:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      user_data_format: RAW
      user_data: |
        #!/bin/sh
        # Trigger rescan to ensure we see the attached volume
        for i in /sys/class/scsi_host/*; do echo "- - -" > $i/scan; done
        # Wait for the rescan as the volume doesn't appear immediately
        for i in $(seq 10)
        do
          grep -q vdb /proc/partitions && break
          sleep 1
        done
        if grep -q vdb /proc/partitions
        then
          mkfs.ext4 /dev/vdb
          mount /dev/vdb /mnt
          echo "test_string" > /mnt/testfile
        fi

outputs:
    ip_address:
        description: Assigned IP address of the instance
        value: {get_attr: [instance, first_address]}
